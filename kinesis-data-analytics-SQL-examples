%flink.ssql

CREATE TABLE sensor_data (
    sensorId INTEGER,
    currentDecibels DOUBLE,
    event_time TIMESTAMP(3) // make sure that this input data is in right format, if not -> problems
)
PARTITIONED BY (event_time)
WITH (
    'connector' = 'kinesis',
    'stream' = 'my-input-stream' /// this is the kinesis data stream where your input data is
    'aws.region' = 'us-east-1',
    'scan.stream.initpos' = 'LATEST',
    'format' = 'json',
    'json.timestamp-format.standard' = 'ISO-8601'
)

////// output table = where you want to put your output data, connected with my-output-stream

%flink.ssql

CREATE TABLE sensor_output_table (
    sensorId INTEGER,
    currentDecibels DOUBLE,
    event_time TIMESTAMP(3),
    WATERMARK FOR event_time AS event_time - INTERVAL '5' SECOND
)
WITH (
'connector' = 'kinesis',
'stream' = 'my-output-stream',
'aws.region' = 'us-east-1',
'scan.stream.initpos' = 'LATEST',
'format' = 'json',
'json.timestamp-format.standard' = 'ISO-8601');


///// How to insert data to output table

%flink.ssql(type=update)

INSERT INTO sensor_output_table
SELECT sensor_data.sensorId AS sensorId,
       sensor_data.currentDecibels AS currentDecibels,
       sensor_data.event_time
  FROM sensor_data
  
  
  
/// this is a bit potato example as no modification of data is done between two tables. You could do that in SELECT command in INSERT
